
NTI_AVR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006ac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000030  00800060  000006ac  00000740  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800090  00800090  00000770  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000770  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000007a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  000007dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001328  00000000  00000000  000008ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a1f  00000000  00000000  00001c14  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009f6  00000000  00000000  00002633  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000278  00000000  00000000  0000302c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000714  00000000  00000000  000032a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000eb7  00000000  00000000  000039b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  0000486f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 d9 02 	jmp	0x5b2	; 0x5b2 <__vector_1>
   8:	0c 94 02 03 	jmp	0x604	; 0x604 <__vector_2>
   c:	0c 94 2b 03 	jmp	0x656	; 0x656 <__vector_3>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ea       	ldi	r30, 0xAC	; 172
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 39       	cpi	r26, 0x90	; 144
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e9       	ldi	r26, 0x90	; 144
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a6 39       	cpi	r26, 0x96	; 150
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 ab 00 	call	0x156	; 0x156 <main>
  8a:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <SeventSegment_void_BCD_Display>:
{
	
}

void SeventSegment_void_BCD_Display(Segment_Type segment,u8 n)
{
  92:	1f 93       	push	r17
  94:	cf 93       	push	r28
  96:	df 93       	push	r29
  98:	cd b7       	in	r28, 0x3d	; 61
  9a:	de b7       	in	r29, 0x3e	; 62
  9c:	2f 97       	sbiw	r28, 0x0f	; 15
  9e:	0f b6       	in	r0, 0x3f	; 63
  a0:	f8 94       	cli
  a2:	de bf       	out	0x3e, r29	; 62
  a4:	0f be       	out	0x3f, r0	; 63
  a6:	cd bf       	out	0x3d, r28	; 61
  a8:	16 2f       	mov	r17, r22

u8 segmentARR[]={0b00000,0b00001,0b00010,0b00011,0b00100,0b00101,0b00110,0b00111,0b10000,0b10001,0b10010,0b10011,0b10100,0b10101,0b10111};
  aa:	9f e0       	ldi	r25, 0x0F	; 15
  ac:	e0 e6       	ldi	r30, 0x60	; 96
  ae:	f0 e0       	ldi	r31, 0x00	; 0
  b0:	de 01       	movw	r26, r28
  b2:	11 96       	adiw	r26, 0x01	; 1
  b4:	01 90       	ld	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	9a 95       	dec	r25
  ba:	e1 f7       	brne	.-8      	; 0xb4 <SeventSegment_void_BCD_Display+0x22>
switch(segment)
  bc:	81 30       	cpi	r24, 0x01	; 1
  be:	a9 f0       	breq	.+42     	; 0xea <SeventSegment_void_BCD_Display+0x58>
  c0:	28 f0       	brcs	.+10     	; 0xcc <SeventSegment_void_BCD_Display+0x3a>
  c2:	82 30       	cpi	r24, 0x02	; 2
  c4:	09 f1       	breq	.+66     	; 0x108 <SeventSegment_void_BCD_Display+0x76>
  c6:	83 30       	cpi	r24, 0x03	; 3
  c8:	71 f1       	breq	.+92     	; 0x126 <SeventSegment_void_BCD_Display+0x94>
  ca:	3b c0       	rjmp	.+118    	; 0x142 <SeventSegment_void_BCD_Display+0xb0>
{
	case L1:
	DIO_voidWritePin(SEGMENT1_POWER_PIN,LOW);
  cc:	60 e0       	ldi	r22, 0x00	; 0
  ce:	83 e0       	ldi	r24, 0x03	; 3
  d0:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <DIO_voidWritePin>
	DIO_voidWritePort(SEGMENT1_PORT,segmentARR[n]);
  d4:	e1 e0       	ldi	r30, 0x01	; 1
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	ec 0f       	add	r30, r28
  da:	fd 1f       	adc	r31, r29
  dc:	e1 0f       	add	r30, r17
  de:	f1 1d       	adc	r31, r1
  e0:	60 81       	ld	r22, Z
  e2:	81 e0       	ldi	r24, 0x01	; 1
  e4:	0e 94 57 02 	call	0x4ae	; 0x4ae <DIO_voidWritePort>
	
	break;
  e8:	2c c0       	rjmp	.+88     	; 0x142 <SeventSegment_void_BCD_Display+0xb0>
	case L2:
	DIO_voidWritePin(SEGMENT2_POWER_PIN,LOW);
  ea:	60 e0       	ldi	r22, 0x00	; 0
  ec:	82 e0       	ldi	r24, 0x02	; 2
  ee:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <DIO_voidWritePin>
	DIO_voidWritePort(SEGMENT2_PORT,segmentARR[n]);
  f2:	e1 e0       	ldi	r30, 0x01	; 1
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	ec 0f       	add	r30, r28
  f8:	fd 1f       	adc	r31, r29
  fa:	e1 0f       	add	r30, r17
  fc:	f1 1d       	adc	r31, r1
  fe:	60 81       	ld	r22, Z
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	0e 94 57 02 	call	0x4ae	; 0x4ae <DIO_voidWritePort>
	
	break;
 106:	1d c0       	rjmp	.+58     	; 0x142 <SeventSegment_void_BCD_Display+0xb0>
	
	case L3:
	DIO_voidWritePin(SEGMENT3_POWER_PIN,LOW);
 108:	60 e0       	ldi	r22, 0x00	; 0
 10a:	8d e0       	ldi	r24, 0x0D	; 13
 10c:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <DIO_voidWritePin>
	DIO_voidWritePort(SEGMENT3_PORT,segmentARR[n]);
 110:	e1 e0       	ldi	r30, 0x01	; 1
 112:	f0 e0       	ldi	r31, 0x00	; 0
 114:	ec 0f       	add	r30, r28
 116:	fd 1f       	adc	r31, r29
 118:	e1 0f       	add	r30, r17
 11a:	f1 1d       	adc	r31, r1
 11c:	60 81       	ld	r22, Z
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	0e 94 57 02 	call	0x4ae	; 0x4ae <DIO_voidWritePort>
	
	break;
 124:	0e c0       	rjmp	.+28     	; 0x142 <SeventSegment_void_BCD_Display+0xb0>
	
	case L4:
	DIO_voidWritePin(SEGMENT4_POWER_PIN,LOW);
 126:	60 e0       	ldi	r22, 0x00	; 0
 128:	8e e0       	ldi	r24, 0x0E	; 14
 12a:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <DIO_voidWritePin>
	DIO_voidWritePort(SEGMENT4_PORT,segmentARR[n]);
 12e:	e1 e0       	ldi	r30, 0x01	; 1
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	ec 0f       	add	r30, r28
 134:	fd 1f       	adc	r31, r29
 136:	e1 0f       	add	r30, r17
 138:	f1 1d       	adc	r31, r1
 13a:	60 81       	ld	r22, Z
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	0e 94 57 02 	call	0x4ae	; 0x4ae <DIO_voidWritePort>
	
	break;
	case TOTAL_SEGMENTS_NUMBER:
	break;
}
}
 142:	2f 96       	adiw	r28, 0x0f	; 15
 144:	0f b6       	in	r0, 0x3f	; 63
 146:	f8 94       	cli
 148:	de bf       	out	0x3e, r29	; 62
 14a:	0f be       	out	0x3f, r0	; 63
 14c:	cd bf       	out	0x3d, r28	; 61
 14e:	df 91       	pop	r29
 150:	cf 91       	pop	r28
 152:	1f 91       	pop	r17
 154:	08 95       	ret

00000156 <main>:
#include <avr/io.h>


int main(void)
{
	GLOBAL_ENABLE();
 156:	78 94       	sei
	
	
	DIO_voidInit();
 158:	0e 94 c2 01 	call	0x384	; 0x384 <DIO_voidInit>
	EXI_voidEnable(EX_INT1);
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	0e 94 67 02 	call	0x4ce	; 0x4ce <EXI_voidEnable>
	EXI_voidTriggerEdge(EX_INT1,RISING_EDGE);
 162:	63 e0       	ldi	r22, 0x03	; 3
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	0e 94 79 02 	call	0x4f2	; 0x4f2 <EXI_voidTriggerEdge>
	
	
	int x=0;
 16a:	c0 e0       	ldi	r28, 0x00	; 0
 16c:	d0 e0       	ldi	r29, 0x00	; 0
    
    while (1) 
    {
		SeventSegment_void_BCD_Display(x);
 16e:	ce 01       	movw	r24, r28
 170:	0e 94 49 00 	call	0x92	; 0x92 <SeventSegment_void_BCD_Display>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 174:	2f ef       	ldi	r18, 0xFF	; 255
 176:	89 e6       	ldi	r24, 0x69	; 105
 178:	98 e1       	ldi	r25, 0x18	; 24
 17a:	21 50       	subi	r18, 0x01	; 1
 17c:	80 40       	sbci	r24, 0x00	; 0
 17e:	90 40       	sbci	r25, 0x00	; 0
 180:	e1 f7       	brne	.-8      	; 0x17a <main+0x24>
 182:	00 c0       	rjmp	.+0      	; 0x184 <main+0x2e>
 184:	00 00       	nop
		_delay_ms(1000);
		x++;
 186:	21 96       	adiw	r28, 0x01	; 1
 188:	f2 cf       	rjmp	.-28     	; 0x16e <main+0x18>

0000018a <DIO_voidInitPin>:
		
		TOG_BIT(PORTC->PORT.REG,pin_num);
		break;
		case PD:
		
		TOG_BIT(PORTD->PORT.REG,pin_num);
 18a:	98 2f       	mov	r25, r24
 18c:	96 95       	lsr	r25
 18e:	96 95       	lsr	r25
 190:	96 95       	lsr	r25
 192:	87 70       	andi	r24, 0x07	; 7
 194:	61 30       	cpi	r22, 0x01	; 1
 196:	09 f4       	brne	.+2      	; 0x19a <DIO_voidInitPin+0x10>
 198:	55 c0       	rjmp	.+170    	; 0x244 <DIO_voidInitPin+0xba>
 19a:	20 f0       	brcs	.+8      	; 0x1a4 <DIO_voidInitPin+0x1a>
 19c:	62 30       	cpi	r22, 0x02	; 2
 19e:	09 f4       	brne	.+2      	; 0x1a2 <DIO_voidInitPin+0x18>
 1a0:	a1 c0       	rjmp	.+322    	; 0x2e4 <DIO_voidInitPin+0x15a>
 1a2:	08 95       	ret
 1a4:	91 30       	cpi	r25, 0x01	; 1
 1a6:	c1 f0       	breq	.+48     	; 0x1d8 <DIO_voidInitPin+0x4e>
 1a8:	28 f0       	brcs	.+10     	; 0x1b4 <DIO_voidInitPin+0x2a>
 1aa:	92 30       	cpi	r25, 0x02	; 2
 1ac:	39 f1       	breq	.+78     	; 0x1fc <DIO_voidInitPin+0x72>
 1ae:	93 30       	cpi	r25, 0x03	; 3
 1b0:	b9 f1       	breq	.+110    	; 0x220 <DIO_voidInitPin+0x96>
 1b2:	08 95       	ret
 1b4:	4a b3       	in	r20, 0x1a	; 26
 1b6:	21 e0       	ldi	r18, 0x01	; 1
 1b8:	30 e0       	ldi	r19, 0x00	; 0
 1ba:	b9 01       	movw	r22, r18
 1bc:	02 c0       	rjmp	.+4      	; 0x1c2 <DIO_voidInitPin+0x38>
 1be:	66 0f       	add	r22, r22
 1c0:	77 1f       	adc	r23, r23
 1c2:	8a 95       	dec	r24
 1c4:	e2 f7       	brpl	.-8      	; 0x1be <DIO_voidInitPin+0x34>
 1c6:	cb 01       	movw	r24, r22
 1c8:	94 2f       	mov	r25, r20
 1ca:	98 2b       	or	r25, r24
 1cc:	9a bb       	out	0x1a, r25	; 26
 1ce:	9b b3       	in	r25, 0x1b	; 27
 1d0:	80 95       	com	r24
 1d2:	89 23       	and	r24, r25
 1d4:	8b bb       	out	0x1b, r24	; 27
 1d6:	08 95       	ret
 1d8:	47 b3       	in	r20, 0x17	; 23
 1da:	21 e0       	ldi	r18, 0x01	; 1
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	b9 01       	movw	r22, r18
 1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <DIO_voidInitPin+0x5c>
 1e2:	66 0f       	add	r22, r22
 1e4:	77 1f       	adc	r23, r23
 1e6:	8a 95       	dec	r24
 1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <DIO_voidInitPin+0x58>
 1ea:	cb 01       	movw	r24, r22
 1ec:	94 2f       	mov	r25, r20
 1ee:	98 2b       	or	r25, r24
 1f0:	97 bb       	out	0x17, r25	; 23
 1f2:	98 b3       	in	r25, 0x18	; 24
 1f4:	80 95       	com	r24
 1f6:	89 23       	and	r24, r25
 1f8:	88 bb       	out	0x18, r24	; 24
 1fa:	08 95       	ret
 1fc:	44 b3       	in	r20, 0x14	; 20
 1fe:	21 e0       	ldi	r18, 0x01	; 1
 200:	30 e0       	ldi	r19, 0x00	; 0
 202:	b9 01       	movw	r22, r18
 204:	02 c0       	rjmp	.+4      	; 0x20a <DIO_voidInitPin+0x80>
 206:	66 0f       	add	r22, r22
 208:	77 1f       	adc	r23, r23
 20a:	8a 95       	dec	r24
 20c:	e2 f7       	brpl	.-8      	; 0x206 <DIO_voidInitPin+0x7c>
 20e:	cb 01       	movw	r24, r22
 210:	94 2f       	mov	r25, r20
 212:	98 2b       	or	r25, r24
 214:	94 bb       	out	0x14, r25	; 20
 216:	95 b3       	in	r25, 0x15	; 21
 218:	80 95       	com	r24
 21a:	89 23       	and	r24, r25
 21c:	85 bb       	out	0x15, r24	; 21
 21e:	08 95       	ret
 220:	41 b3       	in	r20, 0x11	; 17
 222:	21 e0       	ldi	r18, 0x01	; 1
 224:	30 e0       	ldi	r19, 0x00	; 0
 226:	b9 01       	movw	r22, r18
 228:	02 c0       	rjmp	.+4      	; 0x22e <DIO_voidInitPin+0xa4>
 22a:	66 0f       	add	r22, r22
 22c:	77 1f       	adc	r23, r23
 22e:	8a 95       	dec	r24
 230:	e2 f7       	brpl	.-8      	; 0x22a <DIO_voidInitPin+0xa0>
 232:	cb 01       	movw	r24, r22
 234:	94 2f       	mov	r25, r20
 236:	98 2b       	or	r25, r24
 238:	91 bb       	out	0x11, r25	; 17
 23a:	92 b3       	in	r25, 0x12	; 18
 23c:	80 95       	com	r24
 23e:	89 23       	and	r24, r25
 240:	82 bb       	out	0x12, r24	; 18
 242:	08 95       	ret
 244:	91 30       	cpi	r25, 0x01	; 1
 246:	c1 f0       	breq	.+48     	; 0x278 <DIO_voidInitPin+0xee>
 248:	28 f0       	brcs	.+10     	; 0x254 <DIO_voidInitPin+0xca>
 24a:	92 30       	cpi	r25, 0x02	; 2
 24c:	39 f1       	breq	.+78     	; 0x29c <DIO_voidInitPin+0x112>
 24e:	93 30       	cpi	r25, 0x03	; 3
 250:	b9 f1       	breq	.+110    	; 0x2c0 <DIO_voidInitPin+0x136>
 252:	08 95       	ret
 254:	4a b3       	in	r20, 0x1a	; 26
 256:	21 e0       	ldi	r18, 0x01	; 1
 258:	30 e0       	ldi	r19, 0x00	; 0
 25a:	b9 01       	movw	r22, r18
 25c:	02 c0       	rjmp	.+4      	; 0x262 <DIO_voidInitPin+0xd8>
 25e:	66 0f       	add	r22, r22
 260:	77 1f       	adc	r23, r23
 262:	8a 95       	dec	r24
 264:	e2 f7       	brpl	.-8      	; 0x25e <DIO_voidInitPin+0xd4>
 266:	cb 01       	movw	r24, r22
 268:	80 95       	com	r24
 26a:	94 2f       	mov	r25, r20
 26c:	98 23       	and	r25, r24
 26e:	9a bb       	out	0x1a, r25	; 26
 270:	9b b3       	in	r25, 0x1b	; 27
 272:	89 23       	and	r24, r25
 274:	8b bb       	out	0x1b, r24	; 27
 276:	08 95       	ret
 278:	47 b3       	in	r20, 0x17	; 23
 27a:	21 e0       	ldi	r18, 0x01	; 1
 27c:	30 e0       	ldi	r19, 0x00	; 0
 27e:	b9 01       	movw	r22, r18
 280:	02 c0       	rjmp	.+4      	; 0x286 <DIO_voidInitPin+0xfc>
 282:	66 0f       	add	r22, r22
 284:	77 1f       	adc	r23, r23
 286:	8a 95       	dec	r24
 288:	e2 f7       	brpl	.-8      	; 0x282 <DIO_voidInitPin+0xf8>
 28a:	cb 01       	movw	r24, r22
 28c:	80 95       	com	r24
 28e:	94 2f       	mov	r25, r20
 290:	98 23       	and	r25, r24
 292:	97 bb       	out	0x17, r25	; 23
 294:	98 b3       	in	r25, 0x18	; 24
 296:	89 23       	and	r24, r25
 298:	88 bb       	out	0x18, r24	; 24
 29a:	08 95       	ret
 29c:	44 b3       	in	r20, 0x14	; 20
 29e:	21 e0       	ldi	r18, 0x01	; 1
 2a0:	30 e0       	ldi	r19, 0x00	; 0
 2a2:	b9 01       	movw	r22, r18
 2a4:	02 c0       	rjmp	.+4      	; 0x2aa <DIO_voidInitPin+0x120>
 2a6:	66 0f       	add	r22, r22
 2a8:	77 1f       	adc	r23, r23
 2aa:	8a 95       	dec	r24
 2ac:	e2 f7       	brpl	.-8      	; 0x2a6 <DIO_voidInitPin+0x11c>
 2ae:	cb 01       	movw	r24, r22
 2b0:	80 95       	com	r24
 2b2:	94 2f       	mov	r25, r20
 2b4:	98 23       	and	r25, r24
 2b6:	94 bb       	out	0x14, r25	; 20
 2b8:	95 b3       	in	r25, 0x15	; 21
 2ba:	89 23       	and	r24, r25
 2bc:	85 bb       	out	0x15, r24	; 21
 2be:	08 95       	ret
 2c0:	41 b3       	in	r20, 0x11	; 17
 2c2:	21 e0       	ldi	r18, 0x01	; 1
 2c4:	30 e0       	ldi	r19, 0x00	; 0
 2c6:	b9 01       	movw	r22, r18
 2c8:	02 c0       	rjmp	.+4      	; 0x2ce <DIO_voidInitPin+0x144>
 2ca:	66 0f       	add	r22, r22
 2cc:	77 1f       	adc	r23, r23
 2ce:	8a 95       	dec	r24
 2d0:	e2 f7       	brpl	.-8      	; 0x2ca <DIO_voidInitPin+0x140>
 2d2:	cb 01       	movw	r24, r22
 2d4:	80 95       	com	r24
 2d6:	94 2f       	mov	r25, r20
 2d8:	98 23       	and	r25, r24
 2da:	91 bb       	out	0x11, r25	; 17
 2dc:	92 b3       	in	r25, 0x12	; 18
 2de:	89 23       	and	r24, r25
 2e0:	82 bb       	out	0x12, r24	; 18
 2e2:	08 95       	ret
 2e4:	91 30       	cpi	r25, 0x01	; 1
 2e6:	c1 f0       	breq	.+48     	; 0x318 <DIO_voidInitPin+0x18e>
 2e8:	28 f0       	brcs	.+10     	; 0x2f4 <DIO_voidInitPin+0x16a>
 2ea:	92 30       	cpi	r25, 0x02	; 2
 2ec:	39 f1       	breq	.+78     	; 0x33c <DIO_voidInitPin+0x1b2>
 2ee:	93 30       	cpi	r25, 0x03	; 3
 2f0:	b9 f1       	breq	.+110    	; 0x360 <DIO_voidInitPin+0x1d6>
 2f2:	08 95       	ret
 2f4:	4a b3       	in	r20, 0x1a	; 26
 2f6:	21 e0       	ldi	r18, 0x01	; 1
 2f8:	30 e0       	ldi	r19, 0x00	; 0
 2fa:	b9 01       	movw	r22, r18
 2fc:	02 c0       	rjmp	.+4      	; 0x302 <DIO_voidInitPin+0x178>
 2fe:	66 0f       	add	r22, r22
 300:	77 1f       	adc	r23, r23
 302:	8a 95       	dec	r24
 304:	e2 f7       	brpl	.-8      	; 0x2fe <DIO_voidInitPin+0x174>
 306:	cb 01       	movw	r24, r22
 308:	96 2f       	mov	r25, r22
 30a:	90 95       	com	r25
 30c:	94 23       	and	r25, r20
 30e:	9a bb       	out	0x1a, r25	; 26
 310:	9b b3       	in	r25, 0x1b	; 27
 312:	89 2b       	or	r24, r25
 314:	8b bb       	out	0x1b, r24	; 27
 316:	08 95       	ret
 318:	47 b3       	in	r20, 0x17	; 23
 31a:	21 e0       	ldi	r18, 0x01	; 1
 31c:	30 e0       	ldi	r19, 0x00	; 0
 31e:	b9 01       	movw	r22, r18
 320:	02 c0       	rjmp	.+4      	; 0x326 <DIO_voidInitPin+0x19c>
 322:	66 0f       	add	r22, r22
 324:	77 1f       	adc	r23, r23
 326:	8a 95       	dec	r24
 328:	e2 f7       	brpl	.-8      	; 0x322 <DIO_voidInitPin+0x198>
 32a:	cb 01       	movw	r24, r22
 32c:	96 2f       	mov	r25, r22
 32e:	90 95       	com	r25
 330:	94 23       	and	r25, r20
 332:	97 bb       	out	0x17, r25	; 23
 334:	98 b3       	in	r25, 0x18	; 24
 336:	89 2b       	or	r24, r25
 338:	88 bb       	out	0x18, r24	; 24
 33a:	08 95       	ret
 33c:	44 b3       	in	r20, 0x14	; 20
 33e:	21 e0       	ldi	r18, 0x01	; 1
 340:	30 e0       	ldi	r19, 0x00	; 0
 342:	b9 01       	movw	r22, r18
 344:	02 c0       	rjmp	.+4      	; 0x34a <DIO_voidInitPin+0x1c0>
 346:	66 0f       	add	r22, r22
 348:	77 1f       	adc	r23, r23
 34a:	8a 95       	dec	r24
 34c:	e2 f7       	brpl	.-8      	; 0x346 <DIO_voidInitPin+0x1bc>
 34e:	cb 01       	movw	r24, r22
 350:	96 2f       	mov	r25, r22
 352:	90 95       	com	r25
 354:	94 23       	and	r25, r20
 356:	94 bb       	out	0x14, r25	; 20
 358:	95 b3       	in	r25, 0x15	; 21
 35a:	89 2b       	or	r24, r25
 35c:	85 bb       	out	0x15, r24	; 21
 35e:	08 95       	ret
 360:	41 b3       	in	r20, 0x11	; 17
 362:	21 e0       	ldi	r18, 0x01	; 1
 364:	30 e0       	ldi	r19, 0x00	; 0
 366:	b9 01       	movw	r22, r18
 368:	02 c0       	rjmp	.+4      	; 0x36e <DIO_voidInitPin+0x1e4>
 36a:	66 0f       	add	r22, r22
 36c:	77 1f       	adc	r23, r23
 36e:	8a 95       	dec	r24
 370:	e2 f7       	brpl	.-8      	; 0x36a <DIO_voidInitPin+0x1e0>
 372:	cb 01       	movw	r24, r22
 374:	96 2f       	mov	r25, r22
 376:	90 95       	com	r25
 378:	94 23       	and	r25, r20
 37a:	91 bb       	out	0x11, r25	; 17
 37c:	92 b3       	in	r25, 0x12	; 18
 37e:	89 2b       	or	r24, r25
 380:	82 bb       	out	0x12, r24	; 18
 382:	08 95       	ret

00000384 <DIO_voidInit>:
 384:	cf 93       	push	r28
 386:	c0 e0       	ldi	r28, 0x00	; 0
 388:	09 c0       	rjmp	.+18     	; 0x39c <DIO_voidInit+0x18>
 38a:	ec 2f       	mov	r30, r28
 38c:	f0 e0       	ldi	r31, 0x00	; 0
 38e:	e1 59       	subi	r30, 0x91	; 145
 390:	ff 4f       	sbci	r31, 0xFF	; 255
 392:	60 81       	ld	r22, Z
 394:	8c 2f       	mov	r24, r28
 396:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_voidInitPin>
 39a:	cf 5f       	subi	r28, 0xFF	; 255
 39c:	c0 32       	cpi	r28, 0x20	; 32
 39e:	a8 f3       	brcs	.-22     	; 0x38a <DIO_voidInit+0x6>
 3a0:	cf 91       	pop	r28
 3a2:	08 95       	ret

000003a4 <DIO_voidWritePin>:
 3a4:	98 2f       	mov	r25, r24
 3a6:	96 95       	lsr	r25
 3a8:	96 95       	lsr	r25
 3aa:	96 95       	lsr	r25
 3ac:	87 70       	andi	r24, 0x07	; 7
 3ae:	61 30       	cpi	r22, 0x01	; 1
 3b0:	e1 f5       	brne	.+120    	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 3b2:	91 30       	cpi	r25, 0x01	; 1
 3b4:	99 f0       	breq	.+38     	; 0x3dc <DIO_voidWritePin+0x38>
 3b6:	28 f0       	brcs	.+10     	; 0x3c2 <DIO_voidWritePin+0x1e>
 3b8:	92 30       	cpi	r25, 0x02	; 2
 3ba:	e9 f0       	breq	.+58     	; 0x3f6 <DIO_voidWritePin+0x52>
 3bc:	93 30       	cpi	r25, 0x03	; 3
 3be:	41 f1       	breq	.+80     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 3c0:	08 95       	ret
 3c2:	4b b3       	in	r20, 0x1b	; 27
 3c4:	21 e0       	ldi	r18, 0x01	; 1
 3c6:	30 e0       	ldi	r19, 0x00	; 0
 3c8:	b9 01       	movw	r22, r18
 3ca:	02 c0       	rjmp	.+4      	; 0x3d0 <DIO_voidWritePin+0x2c>
 3cc:	66 0f       	add	r22, r22
 3ce:	77 1f       	adc	r23, r23
 3d0:	8a 95       	dec	r24
 3d2:	e2 f7       	brpl	.-8      	; 0x3cc <DIO_voidWritePin+0x28>
 3d4:	cb 01       	movw	r24, r22
 3d6:	84 2b       	or	r24, r20
 3d8:	8b bb       	out	0x1b, r24	; 27
 3da:	08 95       	ret
 3dc:	48 b3       	in	r20, 0x18	; 24
 3de:	21 e0       	ldi	r18, 0x01	; 1
 3e0:	30 e0       	ldi	r19, 0x00	; 0
 3e2:	b9 01       	movw	r22, r18
 3e4:	02 c0       	rjmp	.+4      	; 0x3ea <DIO_voidWritePin+0x46>
 3e6:	66 0f       	add	r22, r22
 3e8:	77 1f       	adc	r23, r23
 3ea:	8a 95       	dec	r24
 3ec:	e2 f7       	brpl	.-8      	; 0x3e6 <DIO_voidWritePin+0x42>
 3ee:	cb 01       	movw	r24, r22
 3f0:	84 2b       	or	r24, r20
 3f2:	88 bb       	out	0x18, r24	; 24
 3f4:	08 95       	ret
 3f6:	45 b3       	in	r20, 0x15	; 21
 3f8:	21 e0       	ldi	r18, 0x01	; 1
 3fa:	30 e0       	ldi	r19, 0x00	; 0
 3fc:	b9 01       	movw	r22, r18
 3fe:	02 c0       	rjmp	.+4      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
 400:	66 0f       	add	r22, r22
 402:	77 1f       	adc	r23, r23
 404:	8a 95       	dec	r24
 406:	e2 f7       	brpl	.-8      	; 0x400 <__EEPROM_REGION_LENGTH__>
 408:	cb 01       	movw	r24, r22
 40a:	84 2b       	or	r24, r20
 40c:	85 bb       	out	0x15, r24	; 21
 40e:	08 95       	ret
 410:	42 b3       	in	r20, 0x12	; 18
 412:	21 e0       	ldi	r18, 0x01	; 1
 414:	30 e0       	ldi	r19, 0x00	; 0
 416:	b9 01       	movw	r22, r18
 418:	02 c0       	rjmp	.+4      	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 41a:	66 0f       	add	r22, r22
 41c:	77 1f       	adc	r23, r23
 41e:	8a 95       	dec	r24
 420:	e2 f7       	brpl	.-8      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 422:	cb 01       	movw	r24, r22
 424:	84 2b       	or	r24, r20
 426:	82 bb       	out	0x12, r24	; 18
 428:	08 95       	ret
 42a:	61 11       	cpse	r22, r1
 42c:	3f c0       	rjmp	.+126    	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
 42e:	91 30       	cpi	r25, 0x01	; 1
 430:	a1 f0       	breq	.+40     	; 0x45a <__EEPROM_REGION_LENGTH__+0x5a>
 432:	28 f0       	brcs	.+10     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 434:	92 30       	cpi	r25, 0x02	; 2
 436:	f9 f0       	breq	.+62     	; 0x476 <__EEPROM_REGION_LENGTH__+0x76>
 438:	93 30       	cpi	r25, 0x03	; 3
 43a:	59 f1       	breq	.+86     	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
 43c:	08 95       	ret
 43e:	4b b3       	in	r20, 0x1b	; 27
 440:	21 e0       	ldi	r18, 0x01	; 1
 442:	30 e0       	ldi	r19, 0x00	; 0
 444:	b9 01       	movw	r22, r18
 446:	02 c0       	rjmp	.+4      	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 448:	66 0f       	add	r22, r22
 44a:	77 1f       	adc	r23, r23
 44c:	8a 95       	dec	r24
 44e:	e2 f7       	brpl	.-8      	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 450:	cb 01       	movw	r24, r22
 452:	80 95       	com	r24
 454:	84 23       	and	r24, r20
 456:	8b bb       	out	0x1b, r24	; 27
 458:	08 95       	ret
 45a:	48 b3       	in	r20, 0x18	; 24
 45c:	21 e0       	ldi	r18, 0x01	; 1
 45e:	30 e0       	ldi	r19, 0x00	; 0
 460:	b9 01       	movw	r22, r18
 462:	02 c0       	rjmp	.+4      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
 464:	66 0f       	add	r22, r22
 466:	77 1f       	adc	r23, r23
 468:	8a 95       	dec	r24
 46a:	e2 f7       	brpl	.-8      	; 0x464 <__EEPROM_REGION_LENGTH__+0x64>
 46c:	cb 01       	movw	r24, r22
 46e:	80 95       	com	r24
 470:	84 23       	and	r24, r20
 472:	88 bb       	out	0x18, r24	; 24
 474:	08 95       	ret
 476:	45 b3       	in	r20, 0x15	; 21
 478:	21 e0       	ldi	r18, 0x01	; 1
 47a:	30 e0       	ldi	r19, 0x00	; 0
 47c:	b9 01       	movw	r22, r18
 47e:	02 c0       	rjmp	.+4      	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
 480:	66 0f       	add	r22, r22
 482:	77 1f       	adc	r23, r23
 484:	8a 95       	dec	r24
 486:	e2 f7       	brpl	.-8      	; 0x480 <__EEPROM_REGION_LENGTH__+0x80>
 488:	cb 01       	movw	r24, r22
 48a:	80 95       	com	r24
 48c:	84 23       	and	r24, r20
 48e:	85 bb       	out	0x15, r24	; 21
 490:	08 95       	ret
 492:	42 b3       	in	r20, 0x12	; 18
 494:	21 e0       	ldi	r18, 0x01	; 1
 496:	30 e0       	ldi	r19, 0x00	; 0
 498:	b9 01       	movw	r22, r18
 49a:	02 c0       	rjmp	.+4      	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
 49c:	66 0f       	add	r22, r22
 49e:	77 1f       	adc	r23, r23
 4a0:	8a 95       	dec	r24
 4a2:	e2 f7       	brpl	.-8      	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
 4a4:	cb 01       	movw	r24, r22
 4a6:	80 95       	com	r24
 4a8:	84 23       	and	r24, r20
 4aa:	82 bb       	out	0x12, r24	; 18
 4ac:	08 95       	ret

000004ae <DIO_voidWritePort>:
	}
}

void DIO_voidWritePort(DIO_Port_type port,u8 value)
{
	switch(port)
 4ae:	81 30       	cpi	r24, 0x01	; 1
 4b0:	41 f0       	breq	.+16     	; 0x4c2 <DIO_voidWritePort+0x14>
 4b2:	28 f0       	brcs	.+10     	; 0x4be <DIO_voidWritePort+0x10>
 4b4:	82 30       	cpi	r24, 0x02	; 2
 4b6:	39 f0       	breq	.+14     	; 0x4c6 <DIO_voidWritePort+0x18>
 4b8:	83 30       	cpi	r24, 0x03	; 3
 4ba:	39 f0       	breq	.+14     	; 0x4ca <DIO_voidWritePort+0x1c>
 4bc:	08 95       	ret
	{
		case PA:
		PORTA->PORT.REG=value;
 4be:	6b bb       	out	0x1b, r22	; 27
		break;
 4c0:	08 95       	ret
		case PB:
		PORTB->PORT.REG=value;
 4c2:	68 bb       	out	0x18, r22	; 24
		break;
 4c4:	08 95       	ret
		case PC:
		PORTC->PORT.REG=value;
 4c6:	65 bb       	out	0x15, r22	; 21
		break;
 4c8:	08 95       	ret
		case PD:
		PORTD->PORT.REG=value;
 4ca:	62 bb       	out	0x12, r22	; 18
 4cc:	08 95       	ret

000004ce <EXI_voidEnable>:
		break;
		case EX_INT1:
		INT1_Fptr=LocalFPtr;
		break;
		case EX_INT2:
		INT2_Fptr=LocalFPtr;
 4ce:	81 30       	cpi	r24, 0x01	; 1
 4d0:	41 f0       	breq	.+16     	; 0x4e2 <EXI_voidEnable+0x14>
 4d2:	18 f0       	brcs	.+6      	; 0x4da <EXI_voidEnable+0xc>
 4d4:	82 30       	cpi	r24, 0x02	; 2
 4d6:	49 f0       	breq	.+18     	; 0x4ea <EXI_voidEnable+0x1c>
 4d8:	08 95       	ret
 4da:	8b b7       	in	r24, 0x3b	; 59
 4dc:	80 64       	ori	r24, 0x40	; 64
 4de:	8b bf       	out	0x3b, r24	; 59
 4e0:	08 95       	ret
 4e2:	8b b7       	in	r24, 0x3b	; 59
 4e4:	80 68       	ori	r24, 0x80	; 128
 4e6:	8b bf       	out	0x3b, r24	; 59
 4e8:	08 95       	ret
 4ea:	8b b7       	in	r24, 0x3b	; 59
 4ec:	80 62       	ori	r24, 0x20	; 32
 4ee:	8b bf       	out	0x3b, r24	; 59
 4f0:	08 95       	ret

000004f2 <EXI_voidTriggerEdge>:
 4f2:	81 30       	cpi	r24, 0x01	; 1
 4f4:	49 f1       	breq	.+82     	; 0x548 <EXI_voidTriggerEdge+0x56>
 4f6:	20 f0       	brcs	.+8      	; 0x500 <EXI_voidTriggerEdge+0xe>
 4f8:	82 30       	cpi	r24, 0x02	; 2
 4fa:	09 f4       	brne	.+2      	; 0x4fe <EXI_voidTriggerEdge+0xc>
 4fc:	49 c0       	rjmp	.+146    	; 0x590 <EXI_voidTriggerEdge+0x9e>
 4fe:	08 95       	ret
 500:	61 30       	cpi	r22, 0x01	; 1
 502:	69 f0       	breq	.+26     	; 0x51e <EXI_voidTriggerEdge+0x2c>
 504:	28 f0       	brcs	.+10     	; 0x510 <EXI_voidTriggerEdge+0x1e>
 506:	62 30       	cpi	r22, 0x02	; 2
 508:	89 f0       	breq	.+34     	; 0x52c <EXI_voidTriggerEdge+0x3a>
 50a:	63 30       	cpi	r22, 0x03	; 3
 50c:	b1 f0       	breq	.+44     	; 0x53a <EXI_voidTriggerEdge+0x48>
 50e:	08 95       	ret
 510:	85 b7       	in	r24, 0x35	; 53
 512:	8e 7f       	andi	r24, 0xFE	; 254
 514:	85 bf       	out	0x35, r24	; 53
 516:	85 b7       	in	r24, 0x35	; 53
 518:	8d 7f       	andi	r24, 0xFD	; 253
 51a:	85 bf       	out	0x35, r24	; 53
 51c:	08 95       	ret
 51e:	85 b7       	in	r24, 0x35	; 53
 520:	81 60       	ori	r24, 0x01	; 1
 522:	85 bf       	out	0x35, r24	; 53
 524:	85 b7       	in	r24, 0x35	; 53
 526:	8d 7f       	andi	r24, 0xFD	; 253
 528:	85 bf       	out	0x35, r24	; 53
 52a:	08 95       	ret
 52c:	85 b7       	in	r24, 0x35	; 53
 52e:	8e 7f       	andi	r24, 0xFE	; 254
 530:	85 bf       	out	0x35, r24	; 53
 532:	85 b7       	in	r24, 0x35	; 53
 534:	82 60       	ori	r24, 0x02	; 2
 536:	85 bf       	out	0x35, r24	; 53
 538:	08 95       	ret
 53a:	85 b7       	in	r24, 0x35	; 53
 53c:	81 60       	ori	r24, 0x01	; 1
 53e:	85 bf       	out	0x35, r24	; 53
 540:	85 b7       	in	r24, 0x35	; 53
 542:	82 60       	ori	r24, 0x02	; 2
 544:	85 bf       	out	0x35, r24	; 53
 546:	08 95       	ret
 548:	61 30       	cpi	r22, 0x01	; 1
 54a:	69 f0       	breq	.+26     	; 0x566 <EXI_voidTriggerEdge+0x74>
 54c:	28 f0       	brcs	.+10     	; 0x558 <EXI_voidTriggerEdge+0x66>
 54e:	62 30       	cpi	r22, 0x02	; 2
 550:	89 f0       	breq	.+34     	; 0x574 <EXI_voidTriggerEdge+0x82>
 552:	63 30       	cpi	r22, 0x03	; 3
 554:	b1 f0       	breq	.+44     	; 0x582 <EXI_voidTriggerEdge+0x90>
 556:	08 95       	ret
 558:	85 b7       	in	r24, 0x35	; 53
 55a:	8b 7f       	andi	r24, 0xFB	; 251
 55c:	85 bf       	out	0x35, r24	; 53
 55e:	85 b7       	in	r24, 0x35	; 53
 560:	87 7f       	andi	r24, 0xF7	; 247
 562:	85 bf       	out	0x35, r24	; 53
 564:	08 95       	ret
 566:	85 b7       	in	r24, 0x35	; 53
 568:	84 60       	ori	r24, 0x04	; 4
 56a:	85 bf       	out	0x35, r24	; 53
 56c:	85 b7       	in	r24, 0x35	; 53
 56e:	87 7f       	andi	r24, 0xF7	; 247
 570:	85 bf       	out	0x35, r24	; 53
 572:	08 95       	ret
 574:	85 b7       	in	r24, 0x35	; 53
 576:	8b 7f       	andi	r24, 0xFB	; 251
 578:	85 bf       	out	0x35, r24	; 53
 57a:	85 b7       	in	r24, 0x35	; 53
 57c:	88 60       	ori	r24, 0x08	; 8
 57e:	85 bf       	out	0x35, r24	; 53
 580:	08 95       	ret
 582:	85 b7       	in	r24, 0x35	; 53
 584:	84 60       	ori	r24, 0x04	; 4
 586:	85 bf       	out	0x35, r24	; 53
 588:	85 b7       	in	r24, 0x35	; 53
 58a:	88 60       	ori	r24, 0x08	; 8
 58c:	85 bf       	out	0x35, r24	; 53
 58e:	08 95       	ret
 590:	62 30       	cpi	r22, 0x02	; 2
 592:	19 f0       	breq	.+6      	; 0x59a <EXI_voidTriggerEdge+0xa8>
 594:	63 30       	cpi	r22, 0x03	; 3
 596:	29 f0       	breq	.+10     	; 0x5a2 <EXI_voidTriggerEdge+0xb0>
 598:	08 c0       	rjmp	.+16     	; 0x5aa <EXI_voidTriggerEdge+0xb8>
 59a:	84 b7       	in	r24, 0x34	; 52
 59c:	8f 7b       	andi	r24, 0xBF	; 191
 59e:	84 bf       	out	0x34, r24	; 52
 5a0:	08 95       	ret
 5a2:	84 b7       	in	r24, 0x34	; 52
 5a4:	80 64       	ori	r24, 0x40	; 64
 5a6:	84 bf       	out	0x34, r24	; 52
 5a8:	08 95       	ret
 5aa:	84 b7       	in	r24, 0x34	; 52
 5ac:	8f 7b       	andi	r24, 0xBF	; 191
 5ae:	84 bf       	out	0x34, r24	; 52
 5b0:	08 95       	ret

000005b2 <__vector_1>:
*/



ISR(INT0_vect)
{
 5b2:	1f 92       	push	r1
 5b4:	0f 92       	push	r0
 5b6:	0f b6       	in	r0, 0x3f	; 63
 5b8:	0f 92       	push	r0
 5ba:	11 24       	eor	r1, r1
 5bc:	2f 93       	push	r18
 5be:	3f 93       	push	r19
 5c0:	4f 93       	push	r20
 5c2:	5f 93       	push	r21
 5c4:	6f 93       	push	r22
 5c6:	7f 93       	push	r23
 5c8:	8f 93       	push	r24
 5ca:	9f 93       	push	r25
 5cc:	af 93       	push	r26
 5ce:	bf 93       	push	r27
 5d0:	ef 93       	push	r30
 5d2:	ff 93       	push	r31
	if (INT0_Fptr!=NULLPTR)
 5d4:	e0 91 94 00 	lds	r30, 0x0094	; 0x800094 <INT0_Fptr>
 5d8:	f0 91 95 00 	lds	r31, 0x0095	; 0x800095 <INT0_Fptr+0x1>
 5dc:	30 97       	sbiw	r30, 0x00	; 0
 5de:	09 f0       	breq	.+2      	; 0x5e2 <__vector_1+0x30>
	{
		INT0_Fptr();
 5e0:	09 95       	icall
	}
}
 5e2:	ff 91       	pop	r31
 5e4:	ef 91       	pop	r30
 5e6:	bf 91       	pop	r27
 5e8:	af 91       	pop	r26
 5ea:	9f 91       	pop	r25
 5ec:	8f 91       	pop	r24
 5ee:	7f 91       	pop	r23
 5f0:	6f 91       	pop	r22
 5f2:	5f 91       	pop	r21
 5f4:	4f 91       	pop	r20
 5f6:	3f 91       	pop	r19
 5f8:	2f 91       	pop	r18
 5fa:	0f 90       	pop	r0
 5fc:	0f be       	out	0x3f, r0	; 63
 5fe:	0f 90       	pop	r0
 600:	1f 90       	pop	r1
 602:	18 95       	reti

00000604 <__vector_2>:
ISR(INT1_vect)
{
 604:	1f 92       	push	r1
 606:	0f 92       	push	r0
 608:	0f b6       	in	r0, 0x3f	; 63
 60a:	0f 92       	push	r0
 60c:	11 24       	eor	r1, r1
 60e:	2f 93       	push	r18
 610:	3f 93       	push	r19
 612:	4f 93       	push	r20
 614:	5f 93       	push	r21
 616:	6f 93       	push	r22
 618:	7f 93       	push	r23
 61a:	8f 93       	push	r24
 61c:	9f 93       	push	r25
 61e:	af 93       	push	r26
 620:	bf 93       	push	r27
 622:	ef 93       	push	r30
 624:	ff 93       	push	r31
	if (INT1_Fptr!=NULLPTR)
 626:	e0 91 92 00 	lds	r30, 0x0092	; 0x800092 <INT1_Fptr>
 62a:	f0 91 93 00 	lds	r31, 0x0093	; 0x800093 <INT1_Fptr+0x1>
 62e:	30 97       	sbiw	r30, 0x00	; 0
 630:	09 f0       	breq	.+2      	; 0x634 <__vector_2+0x30>
	{
		INT1_Fptr();
 632:	09 95       	icall
	}
}
 634:	ff 91       	pop	r31
 636:	ef 91       	pop	r30
 638:	bf 91       	pop	r27
 63a:	af 91       	pop	r26
 63c:	9f 91       	pop	r25
 63e:	8f 91       	pop	r24
 640:	7f 91       	pop	r23
 642:	6f 91       	pop	r22
 644:	5f 91       	pop	r21
 646:	4f 91       	pop	r20
 648:	3f 91       	pop	r19
 64a:	2f 91       	pop	r18
 64c:	0f 90       	pop	r0
 64e:	0f be       	out	0x3f, r0	; 63
 650:	0f 90       	pop	r0
 652:	1f 90       	pop	r1
 654:	18 95       	reti

00000656 <__vector_3>:
ISR(INT2_vect)
{
 656:	1f 92       	push	r1
 658:	0f 92       	push	r0
 65a:	0f b6       	in	r0, 0x3f	; 63
 65c:	0f 92       	push	r0
 65e:	11 24       	eor	r1, r1
 660:	2f 93       	push	r18
 662:	3f 93       	push	r19
 664:	4f 93       	push	r20
 666:	5f 93       	push	r21
 668:	6f 93       	push	r22
 66a:	7f 93       	push	r23
 66c:	8f 93       	push	r24
 66e:	9f 93       	push	r25
 670:	af 93       	push	r26
 672:	bf 93       	push	r27
 674:	ef 93       	push	r30
 676:	ff 93       	push	r31
	if (INT2_Fptr!=NULLPTR)
 678:	e0 91 90 00 	lds	r30, 0x0090	; 0x800090 <__data_end>
 67c:	f0 91 91 00 	lds	r31, 0x0091	; 0x800091 <__data_end+0x1>
 680:	30 97       	sbiw	r30, 0x00	; 0
 682:	09 f0       	breq	.+2      	; 0x686 <__vector_3+0x30>
	{
		INT2_Fptr();
 684:	09 95       	icall
	}
}
 686:	ff 91       	pop	r31
 688:	ef 91       	pop	r30
 68a:	bf 91       	pop	r27
 68c:	af 91       	pop	r26
 68e:	9f 91       	pop	r25
 690:	8f 91       	pop	r24
 692:	7f 91       	pop	r23
 694:	6f 91       	pop	r22
 696:	5f 91       	pop	r21
 698:	4f 91       	pop	r20
 69a:	3f 91       	pop	r19
 69c:	2f 91       	pop	r18
 69e:	0f 90       	pop	r0
 6a0:	0f be       	out	0x3f, r0	; 63
 6a2:	0f 90       	pop	r0
 6a4:	1f 90       	pop	r1
 6a6:	18 95       	reti

000006a8 <_exit>:
 6a8:	f8 94       	cli

000006aa <__stop_program>:
 6aa:	ff cf       	rjmp	.-2      	; 0x6aa <__stop_program>
